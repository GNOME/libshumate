/* This file is generated by glib-genmarshal, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */
#pragma once

#include <glib-object.h>

G_BEGIN_DECLS

/* VOID:DOUBLE,DOUBLE,BOXED (../champlain/champlain-marshal.list:1) */
extern
void _champlain_marshal_VOID__DOUBLE_DOUBLE_BOXED (GClosure     *closure,
                                                   GValue       *return_value,
                                                   guint         n_param_values,
                                                   const GValue *param_values,
                                                   gpointer      invocation_hint,
                                                   gpointer      marshal_data);

/* VOID:POINTER,UINT,BOOLEAN (../champlain/champlain-marshal.list:2) */
extern
void _champlain_marshal_VOID__POINTER_UINT_BOOLEAN (GClosure     *closure,
                                                    GValue       *return_value,
                                                    guint         n_param_values,
                                                    const GValue *param_values,
                                                    gpointer      invocation_hint,
                                                    gpointer      marshal_data);

/* VOID:UINT,UINT (../champlain/champlain-marshal.list:3) */
extern
void _champlain_marshal_VOID__UINT_UINT (GClosure     *closure,
                                         GValue       *return_value,
                                         guint         n_param_values,
                                         const GValue *param_values,
                                         gpointer      invocation_hint,
                                         gpointer      marshal_data);

/* VOID:OBJECT,OBJECT (../champlain/champlain-marshal.list:4) */
extern
void _champlain_marshal_VOID__OBJECT_OBJECT (GClosure     *closure,
                                             GValue       *return_value,
                                             guint         n_param_values,
                                             const GValue *param_values,
                                             gpointer      invocation_hint,
                                             gpointer      marshal_data);


G_END_DECLS
